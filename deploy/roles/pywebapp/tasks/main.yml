---

- name: create the python virtual environment for the web-app {{ web_app_name }}
  command: python3.6 -m venv /opt/{{ web_app_name }}
  args:
    creates: /opt/{{ web_app_name }}/bin/activate

- name: create system user for the web-app {{ web_app_name }}
  user: name={{ web_app_user }} system=yes createhome=no

- name: set virtual environment owner and group for the web-app {{ web_app_name }}
  file: path=/opt/{{ web_app_name }} recurse=yes owner={{ web_app_user }} group={{ web_app_user }} state=directory

- name: create log directory for the web-app {{ web_app_name }}
  file: path=/var/log/{{ web_app_name }} owner={{ web_app_user }} group={{ web_app_user }} state=directory

# packages

- name: remove temporary directory for the web-app {{ web_app_name }}
  file: path=/opt/{{ web_app_name }}/tmp state=absent

- name: create temporary directory for the web-app {{ web_app_name }}
  file: path=/opt/{{ web_app_name }}/tmp state=directory owner={{ web_app_user }} group={{ web_app_user }}

- name: clone git repository for the web-app {{ web_app_name }}
  git:
    repo: "{{ git_repo }}"
    dest: /opt/{{ web_app_name }}/tmp
    version: "{{ version }}"
    accept_hostkey: True
  when: git_repo is defined

- name: install cloned GIT repo and requirements for the web-app {{ web_app_name }}
  become: True
  become_user: "{{ web_app_user }}"
  pip:
    chdir: /opt/{{ web_app_name }}/tmp
    virtualenv: /opt/{{ web_app_name }}
    virtualenv_python: /opt/{{ web_app_name }}/bin/python
    requirements: /opt/{{ web_app_name }}/tmp/deploy/roles/{{ role_name }}/files/requirements.txt
    extra_args: '--no-cache-dir'
    state: forcereinstall
  when: git_repo is defined

#- name: remove temporary directory for the web-app {{ web_app_name }}
#  file: path=/opt/{{ web_app_name }}/tmp state=absent


- name: create uWSGI configuration file for the web-app {{ web_app_name }}
  template: src=uwsgi.ini dest=/etc/uwsgi.d/{{ web_app_name }}.ini
            owner={{ web_app_user }} group=nginx

- name: create NGiNX configuration file for the web-app {{ web_app_name }}
  template: src=nginx_app.conf.j2 dest=/etc/nginx/conf.d/{{ app_name }}.conf
  notify: restart nginx